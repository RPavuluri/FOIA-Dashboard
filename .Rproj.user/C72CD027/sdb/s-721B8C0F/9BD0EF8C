{
    "contents" : "# FOIA MINER\n# server.R\n# Chicago Department of Innovation and Technology\n#\n# Dashboard to track 1) most popular words in FOIA requests\n# from selected time period, 2) how the most popular words change\n# each month, 3) the volume of FOIA requests by month, and 4) words that\n# demonstrate a statistially significant rise in volume when compared to\n# their average frequency in previous six months.\n# Dashboard built for several City of Chicago Departments.\n\n################################################################################\n\n#install and load libraries\nsource(\"startup.R\")\nsource(\"dash_URLs.R\")\nlibrary(tm)\nlibrary(RSocrata)\nlibrary(utils)\nlibrary(qlcMatrix)\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(data.table)\nlibrary(lubridate)\nlibrary(devtools)\n\n#source code\nshinyServer(function(input, output) {\n\n  cleanlist <- reactive({\n\n    #read entire dataset with URL\n    full_FOIA = read.socrata(SODA_URL[input$department])\n\n    #subtract six months from selected date range (for rolling mean and stdev)\n    first_date <- as.POSIXct(input$date[1])\n    first_date <- as.POSIXct(first_date)\n    first_date <- first_date - months(6)\n\n    #subset data frame for date range user selects\n    rec_FOIA <- full_FOIA[full_FOIA$DATE.RECEIVED >= as.POSIXct(input$date[1]) & full_FOIA$DATE.RECEIVED <= as.POSIXct(input$date[2]),]\n\n    #subset data frame for date range user select and six previous months (for rising word analysis)\n    FOIA <- full_FOIA[full_FOIA$DATE.RECEIVED >= first_date & full_FOIA$DATE.RECEIVED <= as.POSIXct(input$date[2]),]\n\n    #store all dates for requests made in selected date range\n    dates = as.vector(rec_FOIA$DATE.RECEIVED)\n\n    ##====================================================================\n    # REQUEST VOLUME TAB\n    # most recent request, numer of requests in date range, and\n    # data frame of request volume by month\n\n    #find most recent FOIA request to display\n    max = max(full_FOIA$DATE.RECEIVED)\n\n    #find number of requests in selected date range\n    request_count = length(rec_FOIA$DATE.RECEIVED)\n\n    #strip date column of all days\n    dates = strftime(dates, format=\"%Y/%m\")\n\n    #create data frame for request volume by month\n    date_freq = data.frame(table(dates))\n\n    #rename columns\n    colnames(date_freq) <- c(\"Month\", \"Requests\")\n\n    ##====================================================================\n    # TOP WORDS OVERALL TAB\n    # data frame of top 5 keywords in requests and their frequencies\n\n    #create one corpus of all requests\n    requests = paste(rec_FOIA$DESCRIPTION.OF.REQUEST, collapse=\" \")\n\n    #create source\n    vec_source = VectorSource(requests)\n\n    #create corpus\n    corpus = Corpus(vec_source)\n\n    #turn all words into lower case\n    corpus = tm_map(corpus, content_transformer(tolower))\n\n    #get rid of all white space\n    corpus = tm_map(corpus, stripWhitespace)\n\n    #turn selected characters into spaces\n    for(j in seq(corpus))\n    {\n      corpus[[j]] <- gsub(\"/\", \" \", corpus[[j]])\n      corpus[[j]] <- gsub(\",\", \" \", corpus[[j]])\n      corpus[[j]] <- gsub(\"'s\", \" \", corpus[[j]])\n      corpus[[j]] <- gsub(\"&\", \" \", corpus[[j]])\n      corpus[[j]] <- gsub(\";\", \" \", corpus[[j]])\n    }\n\n    #turn all synonyms into one common term\n    for(j in seq(corpus))\n    {\n      corpus[[j]] <- gsub(\"rlc video footage\", \"rlc_video_footage\", corpus[[j]])\n      corpus[[j]] <- gsub(\"video footage\", \"rlc_video_footage\", corpus[[j]])\n      corpus[[j]] <- gsub(\"violations\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow records\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow, impound, release reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow, impound,release reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow,impound, release reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle tow,impound,release reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"tow and impound reports\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vehicle, tow impound release records\", \"tow_impound_release\", corpus[[j]])\n      corpus[[j]] <- gsub(\"arrest report\", \"arrest_report\", corpus[[j]])\n      corpus[[j]] <- gsub(\"environmental records\", \"environmental_records\", corpus[[j]])\n      corpus[[j]] <- gsub(\"food inspections\", \"food_inspection\", corpus[[j]])\n      corpus[[j]] <- gsub(\"food inspection\", \"food_inspection\", corpus[[j]])\n      corpus[[j]] <- gsub(\"c of o\", \"c/o\", corpus[[j]])\n      corpus[[j]] <- gsub(\"c o\", \"c/o\", corpus[[j]])\n      corpus[[j]] <- gsub(\"viol\", \"vio\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vioations\", \"vio\", corpus[[j]])\n      corpus[[j]] <- gsub(\"vioation\", \"vio\", corpus[[j]])\n      corpus[[j]] <- gsub(\"permits\", \"permit\", corpus[[j]])\n      corpus[[j]] <- gsub(\"licenses\", \"license\", corpus[[j]])\n      corpus[[j]] <- gsub(\"applications\", \"application\", corpus[[j]])\n      corpus[[j]] <- gsub(\"emails\", \"email\", corpus[[j]])\n      corpus[[j]] <- gsub(\"fie\", \"file\", corpus[[j]])\n      corpus[[j]] <- gsub(\"tickets\", \"ticket\", corpus[[j]])\n    }\n\n    #stem words to combine terms like \"violation/violations\" and \"train/training\"\n    corpus = tm_map(corpus, stemDocument)\n\n    #function to remove words we don't want\n    removed <- function(corp,\n                        rmwords = c(\"2010\", \"2011\", \"2012\", \"2013\",\"2014\",\"2015\",\"regarding\",\n                                    \"information\", \"ave.\",\"st.\",\"city\", \"chicago\",\"street\",\n                                    \"intersection\", \"reports\", \"records\", \"report\", \"record\",\n                                    \"documents\",\"info\",\"request\",\"requesting\",\"record\", \"january\",\n                                    \"february\",\"march\",\"april\",\"may\",\"june\",\"july\",\"august\",\"september\",\n                                    \"october\",\"november\",\"december\",\"jan\",\"feb\",\"mar\",\"apr\",\"jun\",\"jul\",\"aug\",\n                                    \"sep\",\"nov\",\"oct\",\"nov\",\"dec\",\"locate\",\"business\",\"please\",\"ave\",\"st\",\"mayor\",\n                                    \"office\",\"provide\",\"emanuel\", \"rahm\", \"311\", \"foia\", \"including\",\"located\", \"sent\",\"copies\",\n                                    \"received\",\"department\", \"following\",\"include\", \"relating\",\n                                    \"pertaining\",\"referenced\",\"related\",\"foia.\",\"freedom\",\"act\",\"pursuant\",\"like\",\n                                    \"approximate\",\"around\", \"requests\",\"used\",\"since\",\"use\",\"choose\",\"underlying\",\n                                    \"within\",\"public\",\"library\",\"nbsp\",\"ldquo\",\"illinois\", \"also\",\"rdquo\",\"rsquo\",\"&quot;\",\n                                    \"-1\",\"-2\"),\n                        more = NULL){\n      ret <- tm_map(x = corp,\n                    FUN = removeWords,\n                    words = c(rmwords, more))\n      return(ret)\n    }\n\n    #call function to remove words\n    corpus <- removed(corp = corpus)\n\n    #remove common english words like \"the\" and \"on\"\n    corpus = tm_map(corpus, removeWords, stopwords(\"english\"))\n\n    #ensure that DocumentTermMatrix receives a text document\n    corpus = tm_map(corpus, PlainTextDocument)\n\n    #create matrix of document terms\n    dtm = DocumentTermMatrix(corpus)\n\n    #convert document term matrix into normal matrix\n    dtm2 = as.matrix(dtm)\n\n    #column sums of this matrix\n    freq_terms = colSums(dtm2)\n\n    #sort vector to see most frequent terms\n    freq_terms = sort(freq_terms, decreasing=TRUE)\n\n    #create data frame of top 5 words and their frequencies\n    freq = head(freq_terms, 5)\n    word = names(freq)\n    wf <- data.frame(word, freq=freq)\n\n    ##====================================================================\n    # TOP WORDS BY MONTH TAB\n    # dataframe of top five word frequencies by month\n\n    #create vector of top five keywords by name\n    top_words = names(freq)\n\n    #create vector of factors and dates (to make columns in dataframe)\n    word_factor = c()\n    word_dates = c()\n\n    #vector of dates\n    dates = as.character(rec_FOIA$DATE.RECEIVED)\n\n    #convert all Descriptions to lower case\n    descriptions = tolower(rec_FOIA$DESCRIPTION.OF.REQUEST)\n\n    #convert all spaces to NA\n    descriptions = gsub(\" +\", \" \", descriptions)\n    descriptions[descriptions == \"\"] <- NA\n    descriptions[descriptions == \" \"] <- NA\n\n    #compare keywords to descriptions\n    ii = c()\n    word_factor = c()\n    for(k in 1:length(top_words)){\n      ii <- sim.strings(top_words[k], descriptions) > 0.15\n      ii[ii == TRUE] <- top_words[k]\n      df = data.frame(ii, dates)\n      df.sub = subset(df, ii != FALSE)\n      word_dates = c(word_dates, as.vector(df.sub$dates))\n      word_factor = c(word_factor, ii[-grep(FALSE, ii)])\n    }\n\n    #create data frame with just date and factor as columns\n    factor_and_dates = data.frame(word_factor, word_dates)\n\n    #strip date column of all years\n    factor_and_dates$word_month = strftime(factor_and_dates$word_dates, format=\"%Y/%m\")\n\n    #create data frame for word frequencies by month\n    word_freq = data.frame(table(factor_and_dates$word_factor, factor_and_dates$word_month))\n\n    #rename columns\n    colnames(word_freq) <- c(\"Word\", \"Month\", \"Freq\")\n\n  ##====================================================================\n  # RISING WORDS TAB\n  # Find months in which any of the top 20 words demonstrate a statistically\n  # significant rise in volume and store each month, word, frequency triple\n  # in data frame\n\n    #create vector of 20 most frequent words in date range user selects\n    freq.l = head(freq_terms, 20)\n    word.l = names(freq.l)\n    wf.l <- data.frame(word.l, freq.l=freq.l)\n\n    #create vector of top 20 keywords by name\n    top_words.l = names(freq.l)\n\n    #create vector of factors and dates (to make columns in dataframe)\n    word_factor.l = c()\n    word_dates.l = c()\n\n    #vector of dates that includes six months before date range user selects\n    dates.l = as.character(FOIA$DATE.RECEIVED)\n\n    #convert all descriptions to lower case\n    descriptions.l = tolower(FOIA$DESCRIPTION.OF.REQUEST)\n\n    #convert all spaces to NA\n    descriptions.l = gsub(\" +\", \" \", descriptions.l)\n    descriptions.l[descriptions.l == \"\"] <- NA\n    descriptions.l[descriptions.l == \" \"] <- NA\n\n    #compare top 20 words to descriptions\n    ii = c()\n    word_factor.l = c()\n    for(k in 1:length(top_words.l)){\n      ii <- sim.strings(top_words.l[k], descriptions.l) > 0.15\n      ii[ii == TRUE] <- top_words.l[k]\n      df = data.frame(ii, dates.l)\n      df.sub = subset(df, ii != FALSE)\n      word_dates.l = c(word_dates.l, as.vector(df.sub$dates.l))\n      word_factor.l = c(word_factor.l, ii[-grep(FALSE, ii)])\n    }\n\n    #create data frame with just word and date as columns\n    factor_and_dates.l = data.frame(word_factor.l, word_dates.l)\n\n    #strip date column of all years\n    factor_and_dates.l$word_month.l = strftime(factor_and_dates.l$word_dates.l, format=\"%Y/%m\")\n\n    #create data frame for word frequencies by month\n    word_freq.l = data.frame(table(factor_and_dates.l$word_factor.l, factor_and_dates.l$word_month.l))\n\n    #rename columns\n    colnames(word_freq.l) <- c(\"Word\", \"Month\", \"Freq\")\n\n    #store word frequencies by month in data table to find rolling mean and stdev\n    dat <- word_freq.l\n    dat <- as.data.table(dat)\n\n    # make sure dat is complete\n    full_examp <- as.data.table(expand.grid(\n      Month = dat[ , .N, keyby = Month][ , as.character(Month)],\n      Word = dat[ , .N, keyby = Word][ , as.character(Word)]))\n    dat <- merge(dat, full_examp, by = c(\"Month\", \"Word\"), all.y = T)\n    rm(full_examp)\n\n    #store variable for previous months\n    NPER <- 6\n\n    #calculate moving ave & stdev by word\n    dat1 <- dat[i = TRUE,\n                j = list(MovingAve = as.numeric(filter(x = Freq,\n                                                       filter = rep(1 , NPER),\n                                                       sides = 1)) / NPER,\n                         X1 = as.numeric(filter(x = Freq ^ 2,\n                                                filter = rep(1 , NPER),\n                                                sides = 1)),\n                         X2 = as.numeric(filter(x = Freq,\n                                                filter = rep(1 , NPER),\n                                                sides = 1) ^ 2) / NPER,\n                         Freq,\n                         Month,\n                         Word),\n                by = Word]\n    mvstdev = dat1[ , list(mvstdev = sqrt((X1 - (X2)) / (NPER - 1)))]\n    dat1$mvstdev <- mvstdev\n\n    #new column to display 0/1 for statistically insignificant/significant rise\n    dat1[, significant := +(((1.96* mvstdev) + MovingAve) < Freq)]\n\n    #create data frame subset by statistical significance\n    dat1.df = data.frame(dat1)\n    sig.df <- subset(dat1.df, significant == 1)\n    sig.df = sig.df[order(sig.df$Month),]\n\n    #remove unnecessary columns from sig.df to display dataframe to user in table\n    display.df <- sig.df\n    keep <- c(\"Month\",\"Word\",\"Freq\")\n    display.df = display.df[keep]\n    display.df = data.frame(display.df$Month, display.df$Word, display.df$Freq)\n    colnames(display.df) <- c(\"Month\", \"Word\", \"Freq\")\n\n    ##====================================================================\n    #RETURN LIST OF VARIABLES FROM CODE ABOVE TO RENDER PLOTS, TEXT, AND TABLES\n    return(list(wf=wf, freq=freq, word_freq=word_freq, freq.l=freq.l, max=max, request_count=request_count,\n                date_freq=date_freq, sig.df=sig.df, word=word, display.df=display.df))\n  })\n\n################################################################################\n# RENDER PLOTS, TABLES, AND TEXT TO DASHBOARD\n\n    #plot top five words from requests in selected date range\n    output$overall_plot <- renderPlot({\n\n      cleanlist <- cleanlist()\n      plot = ggplot(subset(cleanlist$wf, cleanlist$freq>0),\n                    aes(word, freq))\n      plot = plot + geom_bar(stat=\"identity\", fill = \"blue\")\n      plot = plot + theme(axis.text.x=element_text(angle=45, hjust=1))\n      plot = plot + labs(title = \"Most Frequent Words\\n\", x = \"\\nWords\", y = \"Frequency\\n\")\n      plot = plot + theme(plot.title = element_text(size = 22, face = \"bold\"))\n      print(plot)\n    })\n\n    #plot changes in top five words by month\n    output$month_plot <- renderPlot({\n      cleanlist <- cleanlist()\n      plot = ggplot(data <- cleanlist$word_freq) +\n        aes(x = Month,\n            y = Freq,\n            fill = Word,\n            label = Freq) +\n        geom_bar(stat = \"identity\", position = \"dodge\")\n      plot = plot + labs(title = \"Most Frequent Words by Month\\n\", x = \"\\nMonth\", y = \"Frequency\\n\")\n      plot = plot + theme(plot.title = element_text(size = 22, face = \"bold\"))\n      print(plot)\n    })\n\n    #allow user to download CSV of top twenty words\n    output$overall_data <- downloadHandler(\n\n      filename = function() {\n        paste(input$department, \"_TopWords\",\".csv\", sep = \"\")\n      },\n      content = function(con) {\n        cleanlist <- cleanlist()\n        overall.df = data.frame(cleanlist$freq.l)\n        colnames(overall.df) <- c(\"Word\")\n        write.csv(overall.df, con)\n      }\n    )\n\n    #allow user to download CSV of changes by month in top five words\n    output$month_data <- downloadHandler(\n      filename = function() {\n        paste(input$department, \"_TopWordsByMonth\",\".csv\", sep = \"\")\n      },\n      content = function(con) {\n        cleanlist <- cleanlist()\n        write.csv(cleanlist$word_freq, con)\n      }\n    )\n\n    #print total FOIA requests received by dep't in selected date range\n    output$rec_req <- renderText({\n      cleanlist <- cleanlist()\n      paste0(\"Total FOIA Requests in Date Range: \", cleanlist$request_count,\".\")\n    })\n\n    #print most recent FOIA request received by dep't\n    output$volume_text <- renderText({\n      cleanlist <- cleanlist()\n      paste0(\"Most recent FOIA request: \", cleanlist$max,\".\")\n    })\n\n    #plot volume of FOIA requests by month by dep't\n    output$volume_plot <- renderPlot({\n      cleanlist <- cleanlist()\n      plot = ggplot(data = cleanlist$date_freq, aes(x=Month, y=Requests, group=1)) +\n        geom_line(size = 2, colour = \"blue\") +\n        geom_point()\n      plot = plot + labs(title = \"Total FOIA Requests\\n\", x = \"\\nMonth\", y = \"Number of Requests\\n\")\n      plot = plot + theme(plot.title = element_text(size = 22, face = \"bold\"))\n    print(plot)\n    })\n\n    #allow user to download volume of requests by dep't by month\n    output$volume_data <- downloadHandler(\n      filename = function() {\n        paste(input$department, \"_Volume\",\".csv\", sep = \"\")\n      },\n      content = function(con) {\n        cleanlist <- cleanlist()\n        write.csv(cleanlist$date_freq, con)\n      }\n    )\n\n    #print explanation of rising words plot\n    output$rising_explanation <- renderText({\n      \"The plot and table below display words (from the top 20) that exhibit a\n      statistically significant rise in frequency when compared to their average\n      frequency over the previous six months.\"\n    })\n\n    #plot words that rise in popularity when compared to previous six months\n    output$rising_plot <- renderPlot({\n      cleanlist <- cleanlist()\n      plot = ggplot(data = cleanlist$sig.df, aes(x = Month, y = Freq, fill = Word, label = Freq)) +\n        geom_bar(stat = \"identity\", position = \"dodge\")\n      plot = plot + labs(title = \"Rising Keywords\\n\", x = \"\\nMonth\", y = \"Frequency\\n\")\n      plot = plot + theme(plot.title = element_text(size = 22, face = \"bold\"))\n      print(plot)\n    })\n\n    #plot table of rising words by displaying month/word pairs\n    output$rising_table <- renderTable({\n      cleanlist <- cleanlist()\n      cleanlist$display.df\n    })\n\n    #allow users to download CSV of month/word pairs for rising words\n    output$rising_data <- downloadHandler(\n      filename = function() {\n        paste(input$department, \"_RisingWords\",\".csv\", sep = \"\")\n      },\n      content = function(con) {\n        cleanlist <- cleanlist()\n        write.csv(cleanlist$display.df, con)\n      }\n    )\n})\n",
    "created" : 1452564180455.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1104006635",
    "id" : "9BD0EF8C",
    "lastKnownWriteTime" : 1452891063,
    "path" : "~/Desktop/foia-miner/FOIA-Dashboard/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}